on:
  push:
    branches: [setup/cloudflare-integration]
jobs: #can have multiple jobs
  deploy: #name of the job (could be anything)
    runs-on: ubuntu-latest #environment in which the job will run
    
    permissions:
      contents: read
      deployments: write
    
    name: Deploy to Cloudflare Pages
    steps: # defines a series of steps to be executed in the job. Each step can either use an existing GitHub Action (uses) or run a command directly (run)

        #Step 1 (Clone the project)
      - name: Checkout #name of the step (could be anything)
        uses: actions/checkout@v3 # The checkout action clones your repository so that the runner has access to your code.

       #Step 2 (Install Node.js)
      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Use the latest version of Node.js

      - name: Install Dependencies
        run: npm install

      - name: Install Wrangler
        run: npm install -g wrangler


      - name: Build
        env:
          NEXT_PUBLIC_BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_NODE_ENV: ${{ vars.NEXT_PUBLIC_NODE_ENV }} 
          NEXT_PUBLIC_REACT_APP_BASE_URL: ${{ vars.NEXT_PUBLIC_REACT_APP_BASE_URL }} 
          NEXT_PUBLIC_OPEN_WEATHER_API_KEY: ${{ secrets.NEXT_PUBLIC_OPEN_WEATHER_API_KEY }}
        run: npm run pages:build

      - name: Deploy to Cloudflare Pages
        run: wrangler pages deploy .vercel/output/static --project-name g-datalabs
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}